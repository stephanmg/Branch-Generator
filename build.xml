<?xml version="1.0" encoding="UTF-8"?>
<project name="branch-generator" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
    <include name="*.klib"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.kotlinjavaruntime.classpath">
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-reflect.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk7.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-stdlib.jar"/>
    <pathelement location="${path.variable.kotlin_bundled}/lib/kotlin-test.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <fileset dir="${javac2.home}">
      <include name="javac2.jar"/>
      <include name="jdom.jar"/>
      <include name="asm-all*.jar"/>
      <include name="forms-*.jar"/>
    </fileset>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module Branch-Generator -->
  
  <dirname property="module.branch-generator.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.branch-generator" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.branch-generator" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.branch-generator" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.branch-generator" value="-encoding UTF-8 -source 7 -target 7 ${compiler.args}"/>
  
  <property name="branch-generator.output.dir" value="${module.branch-generator.basedir}/out/production/Branch-Generator"/>
  <property name="branch-generator.testoutput.dir" value="${module.branch-generator.basedir}/out/test/Branch-Generator"/>
  
  <path id="branch-generator.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="branch-generator.module.production.classpath">
    <path refid="${module.jdk.classpath.branch-generator}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
  </path>
  
  <path id="branch-generator.runtime.production.module.classpath">
    <pathelement location="${branch-generator.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
  </path>
  
  <path id="branch-generator.module.classpath">
    <path refid="${module.jdk.classpath.branch-generator}"/>
    <pathelement location="${branch-generator.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
  </path>
  
  <path id="branch-generator.runtime.module.classpath">
    <pathelement location="${branch-generator.testoutput.dir}"/>
    <pathelement location="${branch-generator.output.dir}"/>
    <path refid="library.kotlinjavaruntime.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.branch-generator">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.branch-generator">
    <patternset refid="excluded.from.module.branch-generator"/>
  </patternset>
  
  <path id="branch-generator.module.sourcepath">
    <dirset dir="${module.branch-generator.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.branch-generator" depends="compile.module.branch-generator.production,compile.module.branch-generator.tests" description="Compile module Branch-Generator"/>
  
  <target name="compile.module.branch-generator.production" depends="register.custom.compilers" description="Compile module Branch-Generator; production classes">
    <mkdir dir="${branch-generator.output.dir}"/>
    <javac2 destdir="${branch-generator.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.branch-generator}/javac">
      <compilerarg line="${compiler.args.branch-generator}"/>
      <bootclasspath refid="branch-generator.module.bootclasspath"/>
      <classpath refid="branch-generator.module.production.classpath"/>
      <src refid="branch-generator.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.branch-generator"/>
    </javac2>
    
    <copy todir="${branch-generator.output.dir}">
      <fileset dir="${module.branch-generator.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.branch-generator.tests" depends="register.custom.compilers,compile.module.branch-generator.production" description="compile module Branch-Generator; test classes" unless="skip.tests"/>
  
  <target name="clean.module.branch-generator" description="cleanup module">
    <delete dir="${branch-generator.output.dir}"/>
    <delete dir="${branch-generator.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.branch-generator" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.branch-generator" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.branch-generator:jar" value="${basedir}/out/artifacts/Branch_Generator_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Branch-Generator.jar" value="${artifacts.temp.dir}/Branch-Generator.jar"/>
  </target>
  
  <target name="artifact.branch-generator:jar" depends="init.artifacts, compile.module.branch-generator" description="Build &#39;Branch-Generator:jar&#39; artifact">
    <property name="artifact.temp.output.branch-generator:jar" value="${artifacts.temp.dir}/Branch_Generator_jar"/>
    <mkdir dir="${artifact.temp.output.branch-generator:jar}"/>
    <jar destfile="${temp.jar.path.Branch-Generator.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${branch-generator.output.dir}"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-reflect.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-test.jar"/>
      <zipfileset src="${path.variable.kotlin_bundled}/lib/kotlin-stdlib-jdk7.jar"/>
    </jar>
    <copy file="${temp.jar.path.Branch-Generator.jar}" tofile="${artifact.temp.output.branch-generator:jar}/Branch-Generator.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.branch-generator:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.branch-generator:jar}"/>
    <copy todir="${artifact.output.branch-generator:jar}">
      <fileset dir="${artifact.temp.output.branch-generator:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>
